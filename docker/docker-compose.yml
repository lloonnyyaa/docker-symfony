version: '3.7'
services:
    nginx:
        image: nginx:alpine
        container_name: nginx
        ports:
            - "80:80"
            - "443:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
            - NGINX_ROOT=${NGINX_ROOT}
        command: /bin/sh -c "envsubst '$$NGINX_HOST $$NGINX_ROOT' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        depends_on:
            - php
            - mysqldb
        volumes:
            - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./nginx/default.template:/etc/nginx/conf.d/default.template"
            - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
            - "./nginx/ssl:/etc/ssl"
            - "../app:/var/www/html:cached"
            - "../data/logs/nginx:/var/log/nginx"        
        restart: always
    php:
        build: ./php
        container_name: php
        ports:
            - "9000:9001"
        volumes:
            - "../app:/var/www/html:cached"
        working_dir: /var/www/html
        restart: always
    mysqldb:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        ports:
            - "3306:3306"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        volumes:
            - "../data/db/mysql/:/var/lib/mysql"
            - "../data/logs/mysql/:/var/log/mysql/"
        restart: always
    composer:
        image: composer
        container_name: composer
        volumes:
            - "../app:/app:cached"
#        command: install
    node:
        image: node:${NODE_VERSION}
        container_name: node
        volumes:
          - "../app:/usr/src/service"
        working_dir: /usr/src/service
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${MYSQL_HOST}
        restart: always
        depends_on:
            - mysqldb
    elk:
        image: sebp/elk
        container_name: elk
        ports:
            - "5601:5601"
            - "9200:9200"
            - "5044:5044"
        volumes:
            - "../data/elk/elasticsearch:/var/lib/elasticsearch"
        networks: 
            - elknet
        restart: on-failure
    filebeat:
        container_name: filebeat
        user: root
        image: docker.elastic.co/beats/filebeat:${ELASTIC_VERSION}
        volumes:
            - "./filebeat/logstash-beats.crt:/etc/pki/tls/certs/logstash-beats.crt"
            - "./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml"
            - "../data/logs/nginx/:/var/log/nginx/"
            - "../data/logs/mysql/:/var/log/mysql/"
            - "../data/elk/filebeat:/usr/share/filebeat/data/"
        command: filebeat -e -strict.perms=false
        restart: on-failure
        depends_on:
            - elk
        networks: 
            - elknet
volumes:
    php:
    nginx:
        
networks:
    elknet:
        driver: bridge